{
  "filename": "什么是Hippo.md",
  "__html": "<h2 id=\"%E4%B8%BA%E4%BB%80%E4%B9%88%E5%86%99%E8%BF%99%E4%B8%AA%E9%A1%B9%E7%9B%AE%EF%BC%9F\">为什么写这个项目？ <a class=\"header-anchor\" href=\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E5%86%99%E8%BF%99%E4%B8%AA%E9%A1%B9%E7%9B%AE%EF%BC%9F\">#</a></h2>\n<p><a href=\"https://tech.meituan.com/2020/04/02/java-pooling-pratice-in-meituan.html\" title=\"美团线程池文章\">美团线程池文章</a> 介绍中，因为业务对线程池参数没有合理配置，触发过几起生产事故，进而引发了一系列思考。最终决定封装线程池动态参数调整，扩展线程池监控以及消息报警等功能</p>\n<p>在开源平台找了挺多动态线程池项目，从功能性以及健壮性而言，个人感觉不满足企业级应用</p>\n<p>因为对动态线程池比较感兴趣，加上想写一个有意义的项目，所以决定自己来造一个轻量级的轮子</p>\n<p>想给项目起一个简单易记的名字，类似于 Eureka、Nacos、Redis；后和朋友商量，决定以动物命名：<strong>Hippo</strong></p>\n<h2 id=\"%E5%AE%83%E8%A7%A3%E5%86%B3%E4%BA%86%E4%BB%80%E4%B9%88%E9%97%AE%E9%A2%98%EF%BC%9F\">它解决了什么问题？ <a class=\"header-anchor\" href=\"#%E5%AE%83%E8%A7%A3%E5%86%B3%E4%BA%86%E4%BB%80%E4%B9%88%E9%97%AE%E9%A2%98%EF%BC%9F\">#</a></h2>\n<p>线程池在业务系统应该都有使用到，帮助业务流程提升效率以及管理线程，多数场景应用于大量的异步任务处理</p>\n<p>虽然线程池提供了我们许多便利，但也并非尽善尽美，比如下面这些问题就无法很好解决</p>\n<p><img src=\"https://images-machen.oss-cn-beijing.aliyuncs.com/image-20211023160830084.png\" alt=\"\"></p>\n<br/>\n<p>如果线程池的配置涉及到上述问题，那么就有可能需要发布业务系统来解决；如果发布后参数仍不合理，继续发布......</p>\n<p>Hippo 很好解决了这个问题，它将业务中所有线程池统一管理，遇到上述问题不需要发布系统就可以替换线程池参数</p>\n<p><img src=\"https://images-machen.oss-cn-beijing.aliyuncs.com/image-20211023142726818.png\" alt=\"\"></p>\n<h2 id=\"%E5%AE%83%E6%9C%89%E4%BB%80%E4%B9%88%E7%89%B9%E6%80%A7%EF%BC%9F\">它有什么特性？ <a class=\"header-anchor\" href=\"#%E5%AE%83%E6%9C%89%E4%BB%80%E4%B9%88%E7%89%B9%E6%80%A7%EF%BC%9F\">#</a></h2>\n<p>应用系统中线程池并不容易管理。参考美团的设计，Hippo 按照租户、项目、线程池的维度划分。再加上系统权限，让不同的开发、管理人员负责自己系统的线程池操作</p>\n<p>举个例子，小编在一家公司的公共组件团队，团队中负责消息、短链接网关等项目。公共组件是租户，消息或短链接就是项目</p>\n<br/>\n<table>\n<thead>\n<tr>\n<th>模块</th>\n<th>模块名称</th>\n<th>注释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>dynamic-threadpool-auth</td>\n<td>用户权限</td>\n<td>-</td>\n</tr>\n<tr>\n<td>dynamic-threadpool-common</td>\n<td>公共模块</td>\n<td>-</td>\n</tr>\n<tr>\n<td>dynamic-threadpool-config</td>\n<td>配置中心</td>\n<td>提供线程池准实时更新功能</td>\n</tr>\n<tr>\n<td>dynamic-threadpool-console</td>\n<td>控制台</td>\n<td>对接前端项目</td>\n</tr>\n<tr>\n<td>dynamic-threadpool-discovery</td>\n<td>注册中心</td>\n<td>提供线程池项目实例注册、续约、下线等功能</td>\n</tr>\n<tr>\n<td>dynamic-threadpool-spring-boot-starter</td>\n<td>SpringBoot Starter</td>\n<td>-</td>\n</tr>\n<tr>\n<td>dynamic-threadpool-example</td>\n<td>示例项目</td>\n<td>-</td>\n</tr>\n<tr>\n<td>dynamic-threadpool-server</td>\n<td>服务端</td>\n<td>Server 集成各组件</td>\n</tr>\n<tr>\n<td>dynamic-threadpool-tools</td>\n<td>抽象工具类</td>\n<td>GitHub 变更监控、操作日志等组件</td>\n</tr>\n</tbody>\n</table>\n<br/>\n<p>Hippo 除去动态修改线程池，还包含实时查看线程池运行时指标、负载报警、配置日志管理等</p>\n<p><img src=\"https://images-machen.oss-cn-beijing.aliyuncs.com/image-20211023101844619.png\" alt=\"\"></p>\n",
  "link": "/zh-cn/docs/start/什么是Hippo.html",
  "meta": {}
}